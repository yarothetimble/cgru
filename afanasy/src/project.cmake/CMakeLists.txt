cmake_minimum_required(VERSION 2.6.4)
project(afanasy)

set(CMAKE_BUILD_TYPE "Release")

set( CMAKE_CXX_OUTPUT_EXTENSION ".${CMAKE_HOST_SYSTEM_NAME}.o")

set(CMAKE_MODULE_PATH $ENV{ADD_CMAKE_MODULE_PATH} ${CMAKE_MODULE_PATH})

if( ( NOT $ENV{AF_PYTHON_INCLUDE_PATH} STREQUAL "") AND ( NOT $ENV{AF_PYTHON_LIBRARIES} STREQUAL "" ) )
	set(PYTHON_INCLUDE_PATH $ENV{AF_PYTHON_INCLUDE_PATH})
	set(PYTHON_LIBRARIES $ENV{AF_PYTHON_LIBRARIES})
	message("Using specified python = '${PYTHON_INCLUDE_PATH}'")
else( ( NOT $ENV{AF_PYTHON_INCLUDE_PATH} STREQUAL "") AND ( NOT $ENV{AF_PYTHON_LIBRARIES} STREQUAL "" ) )
	find_package(PythonLibs REQUIRED)
endif( ( NOT $ENV{AF_PYTHON_INCLUDE_PATH} STREQUAL "") AND ( NOT $ENV{AF_PYTHON_LIBRARIES} STREQUAL "" ) )

if( "$ENV{AF_POSTGRESQL}" STREQUAL "NO" )
	message("\nWARNING! Building without SQL.\n")
else()
	set(PostgreSQL_ADDITIONAL_VERSIONS "9.2" "9.3" "9.4")
	if( "$ENV{AF_POSTGRESQL}" STREQUAL "REQUIRED" )
		find_package(PostgreSQL REQUIRED)
	else()
		find_package(PostgreSQL)
	endif()
	if( PostgreSQL_FOUND )
		message("PostgreSQL found. Building with SQL.")
		add_definitions(-DSQL_ON)
	else()
		message("\nWARNING! No PostgreSQL found. Building without SQL.\n")
		add_definitions(-DSQL_OFF)
	endif()
endif()

if(UNIX)
	add_definitions(-DUNIX)
	if(APPLE)
		set(CMAKE_OSX_ARCHITECTURES "x86_64")
		#Changing the order of configurations to be sure release is the first one
		set(CMAKE_CONFIGURATION_TYPES "Release")
		add_definitions(-DMACOSX)
	else(APPLE)
		add_definitions(-DLINUX)
	endif(APPLE)
endif(UNIX)
if(WIN32)
	add_definitions(-DWINNT)
endif(WIN32)

include_directories(${PYTHON_INCLUDE_PATH})

set( CMAKE_RUNTIME_OUTPUT_DIRECTORY "../../../$ENV{AF_OSTYPE}/bin")
set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY "../../../$ENV{AF_OSTYPE}/archives")

add_subdirectory(libafanasy)
add_subdirectory(render)
add_subdirectory(libafsql)
add_subdirectory(cmd)
add_subdirectory(server)
if( "$ENV{AF_GUI}" STREQUAL "YES" )
	add_subdirectory(libafqt)
	add_subdirectory(watch)
else()
	message("\nWARNING! Building without GUI.\n")
endif()
